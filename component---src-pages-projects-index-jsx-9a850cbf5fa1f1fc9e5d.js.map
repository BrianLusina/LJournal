{"version":3,"sources":["webpack:///./src/pages/projects/ErrorPage.jsx","webpack:///./src/components/projects/ProjectItem.jsx","webpack:///./src/components/projects/ProjectList.jsx","webpack:///./src/pages/projects/index.jsx","webpack:///./src/pages/projects/LoadingPage.jsx","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/taggedTemplateLiteralLoose.js","webpack:///./src/layouts/MainLayout.jsx"],"names":["ErrorPage","ProjectItem","name","updateDate","url","owner","ownerName","avatarUrl","ownerUrl","description","topics","stargazers","issues","pullRequests","forks","date","moment","diff","Date","timestamp","duration","humanize","className","href","rel","target","dateTime","src","alt","defaultFeaturePic","map","topic","id","key","to","kebabCase","propTypes","string","shape","arrayOf","number","ProjectList","repositories","sort","a","b","updatedAt","login","forkCount","totalCount","repositoryTopics","nodes","stars","pulls","issueCount","primaryLanguage","query","gql","ProjectsPage","MainLayout","page","title","loading","error","data","LoadingPage","viewer","module","exports","strings","raw","slice","children","displaySidebar","tag","render","site","siteMetadata","siteTitle","about","miniPosts","allMarkdownRemark","edges","social","authorsJson","dataJson","location","town","country","email","emailAlias","socialLinks","pageDesc","defaultProps","oneOfType","object","array","bool"],"mappings":"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","file":"component---src-pages-projects-index-jsx-9a850cbf5fa1f1fc9e5d.js","sourcesContent":["import React from 'react'\n\nconst ErrorPage = () => {\n\treturn (\n\t\t<div>\n\t\t\t<p>Error :(</p>\n\t\t</div>\n\t)\n}\n\nexport default ErrorPage;","import React from 'react'\nimport { string, shape, arrayOf, number } from 'prop-types'\nimport kebabCase from 'lodash/kebabCase'\nimport defaultFeaturePic from \"../../assets/images/default_feature_pic.jpg\";\nimport moment from \"moment\";\n\nconst ProjectItem = ({\n\tname,\n\tupdateDate,\n\turl,\n\towner: { ownerName, avatarUrl, ownerUrl },\n\tdescription,\n\ttopics,\n\tstargazers,\n\tissues,\n\tpullRequests,\n\tforks,\n}) => {\n\tconst date = moment(updateDate);\n\tconst today = moment(new Date());\n\tconst diff = today.diff(date, \"months\");\n\n\tconst timestamp = moment.duration(diff, \"months\").humanize();\n\n\treturn (\n\t\t<article className=\"post\">\n\t\t\t<header>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t<a href={url} rel=\"noopener noreferrer\" target=\"_blank\">\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"meta\">\n\t\t\t\t\t<time className=\"published\" dateTime={updateDate}>\n\t\t\t\t\t\t{timestamp}\n\t\t\t\t\t</time>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ownerUrl}\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tclassName=\"author\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"name\">{ownerName}</span>\n\t\t\t\t\t\t<img src={avatarUrl} alt={name} />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</header>\n\n\t\t\t<a\n\t\t\t\thref={url}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\tclassName=\"image featured\"\n\t\t\t>\n\t\t\t\t<img src={defaultFeaturePic} />\n\t\t\t</a>\n\n\t\t\t<p>{description}</p>\n\n\t\t\t<footer>\n\t\t\t\t<ul className=\"actions\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href={url} className=\"button large\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\tCheckout project\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"stats\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttopics.map((\n\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\ttopic: { id, name }, \n\t\t\t\t\t\t\t\t\turl \n\t\t\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t\t<a key={id} to={url}>\n\t\t\t\t\t\t\t\t\t{kebabCase(name)} |{' '}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={`${url}/stargazers`}\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\tclassName=\"icon fa-star\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{stargazers}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={`${url}/network/members`}\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\tclassName=\"icon fa-git\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{forks}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={`${url}/issues`}\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\tclassName=\"icon fa-git\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{issues}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={`${url}/pulls`}\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\tclassName=\"icon fa-git\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{pullRequests}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</footer>\n\t\t</article>\n\t)\n}\n\nProjectItem.propTypes = {\n\tname: string,\n\towner: shape({\n\t\townerName: string,\n\t\tavatarUrl: string,\n\t\townerUrl: string,\n\t}),\n\turl: string,\n\tdescription: string,\n\tupdateDate: string,\n\ttopics: arrayOf(\n\t\tshape({\n\t\t\ttopic: shape({\n\t\t\t\tid: string,\n\t\t\t\tname: string,\n\t\t\t}),\n\t\t\turl: string,\n\t\t})\n\t),\n\tstargazers: number,\n\tforks: number,\n\tissues: number,\n\tpullRequests: number,\n}\n\nexport default ProjectItem\n","import React from 'react'\nimport { arrayOf, shape, string, number } from \"prop-types\";\nimport ProjectItem from './ProjectItem';\n\nconst ProjectList = ({ repositories }) => {\n\tconst sorted = repositories.sort((a,b) => {\n\t\treturn new Date(b.updatedAt) - new Date(a.updatedAt);\n\t});\n\n\treturn sorted.map(\n\t\t({\n\t\t\tid,\n\t\t\tname,\n\t\t\turl,\n\t\t\tupdatedAt,\n\t\t\tdescription,\n\t\t\towner: { login: ownerName, avatarUrl, url: ownerUrl },\n\t\t\tforks: { totalCount: forkCount },\n\t\t\trepositoryTopics: { nodes: topics },\n\t\t\tstargazers: { totalCount: stars },\n\t\t\tpullRequests: { totalCount: pulls },\n\t\t\tissues: { totalCount: issueCount },\n\t\t}) => (\n\t\t\t<ProjectItem\n\t\t\t\tkey={id}\n\t\t\t\tname={name}\n\t\t\t\turl={url}\n\t\t\t\towner={{\n\t\t\t\t\townerName,\n\t\t\t\t\tavatarUrl,\n\t\t\t\t\townerUrl,\n\t\t\t\t}}\n\t\t\t\tdescription={description}\n\t\t\t\tupdateDate={updatedAt}\n\t\t\t\ttopics={topics}\n\t\t\t\tstargazers={stars}\n\t\t\t\tforks={forkCount}\n\t\t\t\tissues={issueCount}\n\t\t\t\tpullRequests={pulls}\n\t\t\t/>\n\t\t)\n\t)\n}\n\nProjectList.propTypes = {\n\trepositories: arrayOf(\n\t\tshape({\n\t\t\tid: string,\n\t\t\towner: shape({\n\t\t\t\tlogin: string,\n\t\t\t\tavatarUrl: string,\n\t\t\t\turl: string\n\t\t\t}),\n\t\t\tname: string,\n\t\t\turl: string,\n\t\t\tdescription: string,\n\t\t\tforks: shape({\n\t\t\t\ttotalCount: number\n\t\t\t}),\n\t\t\trepositoryTopics: shape({\n\t\t\t\tnodes: arrayOf(\n\t\t\t\t\tshape({\n\t\t\t\t\t\ttopic: shape({\n\t\t\t\t\t\t\tid: string,\n\t\t\t\t\t\t\tname: string\n\t\t\t\t\t\t}),\n\t\t\t\t\t\turl: string\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}),\n\t\t\tprimaryLanguage: shape({\n\t\t\t\tname: string\n\t\t\t}),\n\t\t\tupdatedAt: string,\n\t\t\tstargazers: shape({\n\t\t\t\ttotalCount: number\n\t\t\t}),\n\t\t\tpullRequests: shape({\n\t\t\t\ttotalCount: number\n\t\t\t}),\n\t\t\tissues: shape({\n\t\t\t\ttotalCount: number\n\t\t\t})\n\t\t})\n\t)\n}\n\nexport default ProjectList;","import React from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport MainLayoutWrapper from '../../layouts/MainLayout'\nimport ProjectList from '../../components/projects/ProjectList';\nimport LoadingPage from './LoadingPage';\nimport ErrorPage from './ErrorPage';\n\n// eslint-disable-next-line no-undef\nconst query = gql`\n{\n\tviewer {\n\t\trepositories(first: 100) {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\towner {\n\t\t\t\t\tlogin\n\t\t\t\t\tavatarUrl\n\t\t\t\t\turl\n\t\t\t\t}\n\t\t\t\tname\n\t\t\t\turl\n\t\t\t\tdescription\n\t\t\t\tforks(first: 5) {\n\t\t\t\t\ttotalCount\n\t\t\t\t}\n\t\t\t\trepositoryTopics(first: 10) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\ttopic {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\turl\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprimaryLanguage {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tupdatedAt\n\t\t\t\tstargazers {\n\t\t\t\t\ttotalCount\n\t\t\t\t}\n\t\t\t\tpullRequests {\n\t\t\t\t\ttotalCount\n\t\t\t\t}\n\t\t\t\tissues {\n\t\t\t\t\ttotalCount\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`\n\nconst ProjectsPage = () => (\n\t<MainLayoutWrapper\n\t\tpage={{\n\t\t\ttitle: 'Projects',\n\t\t\tdescription: 'Sample Open Source projects, because we love open source.',\n\t\t}}\n\t>\n\t\t<section>\n\t\t\t<Query query={query}>\n\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\tif (loading) \n\t\t\t\t\t\treturn <LoadingPage />\n\t\t\t\t\t\n\t\t\t\t\tif (error) \n\t\t\t\t\t\treturn <ErrorPage />\n\t\t\t\t\t\n\t\t\t\t\tconst repositories = data.viewer.repositories.nodes\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ProjectList repositories={repositories} />\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Query>\n\t\t</section>\n\t</MainLayoutWrapper>\n)\n\nexport default ProjectsPage\n","\nimport React from 'react'\n\nconst LoadingPage = () => {\n\treturn (\n\t\t<div>\n\t\t\tLoading...\n\t\t</div>\n\t)\n}\n\nexport default LoadingPage;\n","function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\nmodule.exports = _taggedTemplateLiteralLoose;","import React from 'react'\nimport { object, string, bool, shape, oneOfType, array } from 'prop-types'\nimport { StaticQuery, graphql } from \"gatsby\"\nimport '../styles/scss/main.scss'\nimport LayoutWrapper from './LayoutWrapper';\n\nconst MainLayout = ({children, displaySidebar, page: { title, description }, tag}) => (\n\t<StaticQuery\n\t\tquery={graphql`\n\t\t\tquery MainLayoutQuery {\n\t\t\t\tsite {\n\t\t\t\t\tsiteMetadata {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tabout\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tallMarkdownRemark(\n\t\t\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t\t\t\tlimit: 5\n\t\t\t\t) {\n\t\t\t\t\tedges {\n\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\ttimeToRead\n\t\t\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\tlink\n\t\t\t\t\t\t\t\t\tavatar\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\tfeature\n\t\t\t\t\t\t\t\t\tthumbnail\n\t\t\t\t\t\t\t\t\tteaser\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttags\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tauthorsJson {\n\t\t\t\t\tsocial {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tlink\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdataJson{\n\t\t\t\t\tlocation {\n\t\t\t\t\t\ttown\n\t\t\t\t\t\tcountry\n\t\t\t\t\t}\n\t\t\t\t\temail\n\t\t\t\t\temailAlias\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t`}\n\t\trender={({ \n\t\t\tsite: { \n\t\t\t\tsiteMetadata: { title: siteTitle, about } \n\t\t\t}, \n\t\t\tallMarkdownRemark: { edges: miniPosts }, \n\t\t\tauthorsJson: { social },\n\t\t\tdataJson: {\n\t\t\t\tlocation : {\n\t\t\t\t\ttown,\n\t\t\t\t\tcountry\n\t\t\t\t},\n\t\t\t\temail,\n\t\t\t\temailAlias,\n\t\t\t}\n\t\t}) => (\n\t\t\t<LayoutWrapper \n\t\t\t\tsiteTitle={siteTitle}\n\t\t\t\ttitle={title}\n\t\t\t\tdisplaySidebar={displaySidebar}\n\t\t\t\tabout={about} \n\t\t\t\tsocialLinks={social}\n\t\t\t\ttown={town}\n\t\t\t\tcountry={country}\n\t\t\t\temail={email}\n\t\t\t\temailAlias={emailAlias}\n\t\t\t\tpageDesc={description}\n\t\t\t\ttag={tag}\n\t\t\t\tminiPosts={miniPosts}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</LayoutWrapper>\n\t\t)}\n\t/>\n)\n\nMainLayout.defaultProps = {\n\tdisplaySidebar: true,\n\tpage: {\n\t\ttitle: null,\n\t\tdescription: null\n\t},\n\ttag: null\n}\n\nMainLayout.propTypes = {\n\tchildren: oneOfType([object, array]),\n\tdisplaySidebar: bool,\n\tpage: shape({\n\t\ttitle: string,\n\t\tdescription: string,\n\t}),\n\ttag: string,\n}\n\nexport default MainLayout;"],"sourceRoot":""}