{"version":3,"sources":["webpack:///./src/propTypes.js","webpack:///./src/components/buttons/ButtonLink.jsx","webpack:///./src/components/posts/PostItem.jsx","webpack:///./src/components/hoc/withGraphQLPostData.jsx","webpack:///./src/pages/finance/index.jsx","webpack:///./src/layouts/MainLayout.jsx"],"names":["blogPropType","shape","allMarkdownRemark","edges","arrayOf","node","frontmatter","title","string","subtitle","excerpt","date","path","category","author","name","link","avatar","image","feature","thumbnail","teaser","credit","creditlink","tags","timeToRead","number","html","locationPropType","ancestorOrigins","object","assign","func","hash","host","hostname","href","key","origin","pathname","port","protocol","reload","replace","search","state","toString","ButtonLink","text","rest","to","className","propTypes","PostItem","img","src","alt","authorLink","dateTime","withPrefix","defaultAvatar","defaultFeature","map","tag","kebabCase","withGraphQLSubscription","WrappedComponent","page","props","posts","getDerivedStateFromProps","nextProps","prevState","data","renderPosts","index","time","moment","format","render","description","this","Component","FinancePage","query","MainLayout","children","displaySidebar","site","siteMetadata","siteTitle","about","miniPosts","social","authorsJson","dataJson","location","town","country","email","emailAlias","socialLinks","pageDesc","defaultProps","oneOfType","array","bool"],"mappings":"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","file":"component---src-pages-finance-index-jsx-7e1547fdbe50f7c369e2.js","sourcesContent":["import {\n\tshape,\n\tarrayOf,\n\tstring,\n\tnumber,\n\tobject,\n\tfunc\n} from 'prop-types'\n\nexport const blogPropType = shape({\n\tallMarkdownRemark: shape({\n\t\tedges: arrayOf(\n\t\t\tshape({\n\t\t\t\tnode: shape({\n\t\t\t\t\tfrontmatter: shape({\n\t\t\t\t\t\ttitle: string,\n\t\t\t\t\t\tsubtitle: string,\n\t\t\t\t\t\texcerpt: string,\n\t\t\t\t\t\tdate: string,\n\t\t\t\t\t\tpath: string,\n\t\t\t\t\t\tcategory: string,\n\t\t\t\t\t\tauthor: shape({\n\t\t\t\t\t\t\tname: string,\n\t\t\t\t\t\t\tlink: string,\n\t\t\t\t\t\t\tavatar: string,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\timage: shape({\n\t\t\t\t\t\t\tfeature: string,\n\t\t\t\t\t\t\tthumbnail: string,\n\t\t\t\t\t\t\tteaser: string,\n\t\t\t\t\t\t\tcredit: string,\n\t\t\t\t\t\t\tcreditlink: string,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\ttags: arrayOf(string),\n\t\t\t\t\t}),\n\t\t\t\t\ttimeToRead: number,\n\t\t\t\t\thtml: string,\n\t\t\t\t}),\n\t\t\t})\n\t\t),\n\t}),\n})\n\nexport const locationPropType = shape({\n\tancestorOrigins: object,\n\tassign: func,\n\thash: string,\n\thost: string,\n\thostname: string,\n\thref: string,\n\tkey: string,\n\torigin: string,\n\tpathname: string,\n\tport: string,\n\tprotocol: string,\n\treload: func,\n\treplace: func,\n\tsearch: string,\n\tstate: object,\n\ttoString: func,\n})\n","import React from \"react\";\nimport { string, object } from \"prop-types\";\nimport { Link } from 'gatsby'\n\n\nconst ButtonLink = ({ link, text, ...rest }) => (\n    <Link\n        to={link}\n        className=\"button large\"\n        {...rest}\n    >\n        {text}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    link: string,\n    text: string,\n    rest: object\n}\n\nexport default ButtonLink;","import React from 'react'\nimport { Link, withPrefix } from 'gatsby'\nimport { string, shape, arrayOf } from 'prop-types'\nimport kebabCase from \"lodash/kebabCase\";\nimport defaultAvatar from '../../assets/images/avatar.jpg'\nimport defaultFeature from '../../assets/images/default_feature_pic.jpg'\nimport ButtonLink from '../buttons/ButtonLink';\n\nconst PostItem = ({\n\ttitle,\n\tsubtitle,\n\tdate,\n\tlink,\n\texcerpt,\n\timg: { src, alt },\n\tauthor: { name, avatar, link: authorLink },\n\ttags,\n}) => (\n\t<article className=\"post\">\n\t\t<header>\n\t\t\t<div className=\"title\">\n\t\t\t\t<h2>\n\t\t\t\t\t<Link to={link}>{title}</Link>\n\t\t\t\t</h2>\n\t\t\t\t<p>{subtitle}</p>\n\t\t\t</div>\n\t\t\t<div className=\"meta\">\n\t\t\t\t<time className=\"published\" dateTime={date}>\n\t\t\t\t\t{date}\n\t\t\t\t</time>\n\t\t\t\t<Link to={`about/#${authorLink}`} className=\"author\">\n\t\t\t\t\t<span className=\"name\">{name}</span>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\tavatar ? withPrefix(`images/authors/${avatar}`) : defaultAvatar\n\t\t\t\t\t\t}\n\t\t\t\t\t\talt={name}\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</header>\n\n\t\t<Link to={link} className=\"image featured\">\n\t\t\t<img\n\t\t\t\tsrc={src ? withPrefix(`images/posts/${src}`) : defaultFeature}\n\t\t\t\talt={alt}\n\t\t\t/>\n\t\t</Link>\n\n\t\t<p>{excerpt}</p>\n\n\t\t<footer>\n\t\t\t<ul className=\"actions\">\n\t\t\t\t<li>\n\t\t\t\t\t<ButtonLink \n\t\t\t\t\t\tlink={link}\n\t\t\t\t\t\ttext=\"Continue Reading\"/>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<ul className=\"stats\">\n\t\t\t\t<li>\n\t\t\t\t\t{tags.map(tag => (\n\t\t\t\t\t\t<Link key={tag} to={`tags/${kebabCase(tag)}`}>\n\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t))}\n\t\t\t\t</li>\n\t\t\t\t{/* <li>\n\t\t\t\t\t<a href=\"#\" className=\"icon fa-heart\">\n\t\t\t\t\t\t28\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#\" className=\"icon fa-comment\">\n\t\t\t\t\t\t128\n\t\t\t\t\t</a>\n\t\t\t\t</li> */}\n\t\t\t</ul>\n\t\t</footer>\n\t</article>\n)\n\nPostItem.propTypes = {\n\ttitle: string,\n\tsubtitle: string,\n\texcerpt: string,\n\tlink: string,\n\tdate: string,\n\timg: shape({\n\t\tsrc: string,\n\t\talt: string,\n\t}),\n\ttags: arrayOf(string),\n\tauthor: shape({\n\t\tavatar: string,\n\t\tname: string,\n\t\tlink: string,\n\t}),\n}\n\nexport default PostItem\n","import React, { Component } from \"react\";\nimport moment from \"moment\"\nimport PostItem from '../posts/PostItem';\nimport MainLayoutWrapper from \"../../layouts/MainLayout\";\n\nexport function withGraphQLSubscription(WrappedComponent, page){\n\treturn class WithGraphQLData extends Component {\n\t\tconstructor(props){\n\t\t\tsuper(props)\n\t\t\tthis.state = {\n\t\t\t\tposts: [],\n\t\t\t}    \n\t\t}\n        \n\t\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\t\tconst {\n\t\t\t\tdata: {\n\t\t\t\t\tallMarkdownRemark: { edges: posts },\n\t\t\t\t},\n\t\t\t} = nextProps\n    \n\t\t\tif (posts !== prevState.posts) {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tposts,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n    \n\t\trenderPosts(data){\n\t\t\tconst {\tallMarkdownRemark: { edges: posts }\t} = data\n\t\t\treturn posts.map(\n\t\t\t\t(\n\t\t\t\t\t{\n\t\t\t\t\t\tnode: {\n\t\t\t\t\t\t\tfrontmatter: {\n\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t\tsubtitle,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\texcerpt,\n\t\t\t\t\t\t\t\tauthor: { avatar, link, name },\n\t\t\t\t\t\t\t\timage: { feature },\n\t\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t\ttags,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tindex\n\t\t\t\t) => {\n\t\t\t\t\tconst time = moment(date).format('MMMM DD, YYYY')\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<PostItem\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tlink={path}\n\t\t\t\t\t\t\timg={{\n\t\t\t\t\t\t\t\tsrc: feature,\n\t\t\t\t\t\t\t\talt: feature,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tauthor={{\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tavatar,\n\t\t\t\t\t\t\t\tlink,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\tsubtitle={subtitle}\n\t\t\t\t\t\t\tdate={time}\n\t\t\t\t\t\t\texcerpt={excerpt}\n\t\t\t\t\t\t\ttags={tags}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n    \n\t\trender() {\n\t\t\tconst { title, description } = page;\n\t\t\treturn (\n\t\t\t\t<MainLayoutWrapper page={{\n\t\t\t\t\ttitle,\n\t\t\t\t\tdescription\n\t\t\t\t}}>\n\t\t\t\t\t<WrappedComponent renderPosts={this.renderPosts} {...this.props}/>\n\t\t\t\t</MainLayoutWrapper>\n\t\t\t)\n\t\t}\n\t}\n}","import React from 'react'\nimport { blogPropType } from '../../propTypes';\nimport { func } from \"prop-types\";\nimport { graphql } from \"gatsby\"\nimport {withGraphQLSubscription} from '../../components/hoc/withGraphQLPostData';\n\nexport const FinancePage = ({data, renderPosts}) => (\n\t<section>{renderPosts(data)}</section>\n)\n\nFinancePage.propTypes = {\n\tdata: blogPropType,\n\trenderPosts: func,\n}\n\nexport const query = graphql`\n\tquery FinancePageQuery {\n\t\tallMarkdownRemark(\n\t\t\tfilter: { frontmatter: { category: { eq: \"finance\" } } }\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tsubtitle\n\t\t\t\t\t\texcerpt\n\t\t\t\t\t\tpath\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tlink\n\t\t\t\t\t\t\tavatar\n\t\t\t\t\t\t}\n\t\t\t\t\t\timage {\n\t\t\t\t\t\t\tfeature\n\t\t\t\t\t\t\tthumbnail\n\t\t\t\t\t\t\tteaser\n\t\t\t\t\t\t\tcredit\n\t\t\t\t\t\t\tcreditlink\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttags\n\t\t\t\t\t}\n\t\t\t\t\texcerpt\n\t\t\t\t\ttimeToRead\n\t\t\t\t\thtml\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\nconst page = {\n\ttitle: \"Finance\",\n\tdescription :\"I believe that through knowledge and discipline, financial peace is possible for all of us.\",\n}\n\nexport default withGraphQLSubscription(FinancePage, page)\n","import React from 'react'\nimport { object, string, bool, shape, oneOfType, array } from 'prop-types'\nimport { StaticQuery, graphql } from \"gatsby\"\nimport '../styles/scss/main.scss'\nimport LayoutWrapper from './LayoutWrapper';\n\nconst MainLayout = ({children, displaySidebar, page: { title, description }, tag}) => (\n\t<StaticQuery\n\t\tquery={graphql`\n\t\t\tquery MainLayoutQuery {\n\t\t\t\tsite {\n\t\t\t\t\tsiteMetadata {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tabout\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tallMarkdownRemark(\n\t\t\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t\t\t\tlimit: 5\n\t\t\t\t) {\n\t\t\t\t\tedges {\n\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\ttimeToRead\n\t\t\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\tlink\n\t\t\t\t\t\t\t\t\tavatar\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\tfeature\n\t\t\t\t\t\t\t\t\tthumbnail\n\t\t\t\t\t\t\t\t\tteaser\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttags\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tauthorsJson {\n\t\t\t\t\tsocial {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tlink\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdataJson{\n\t\t\t\t\tlocation {\n\t\t\t\t\t\ttown\n\t\t\t\t\t\tcountry\n\t\t\t\t\t}\n\t\t\t\t\temail\n\t\t\t\t\temailAlias\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t`}\n\t\trender={({ \n\t\t\tsite: { \n\t\t\t\tsiteMetadata: { title: siteTitle, about } \n\t\t\t}, \n\t\t\tallMarkdownRemark: { edges: miniPosts }, \n\t\t\tauthorsJson: { social },\n\t\t\tdataJson: {\n\t\t\t\tlocation : {\n\t\t\t\t\ttown,\n\t\t\t\t\tcountry\n\t\t\t\t},\n\t\t\t\temail,\n\t\t\t\temailAlias,\n\t\t\t}\n\t\t}) => (\n\t\t\t<LayoutWrapper \n\t\t\t\tsiteTitle={siteTitle}\n\t\t\t\ttitle={title}\n\t\t\t\tdisplaySidebar={displaySidebar}\n\t\t\t\tabout={about} \n\t\t\t\tsocialLinks={social}\n\t\t\t\ttown={town}\n\t\t\t\tcountry={country}\n\t\t\t\temail={email}\n\t\t\t\temailAlias={emailAlias}\n\t\t\t\tpageDesc={description}\n\t\t\t\ttag={tag}\n\t\t\t\tminiPosts={miniPosts}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</LayoutWrapper>\n\t\t)}\n\t/>\n)\n\nMainLayout.defaultProps = {\n\tdisplaySidebar: true,\n\tpage: {\n\t\ttitle: null,\n\t\tdescription: null\n\t},\n\ttag: null\n}\n\nMainLayout.propTypes = {\n\tchildren: oneOfType([object, array]),\n\tdisplaySidebar: bool,\n\tpage: shape({\n\t\ttitle: string,\n\t\tdescription: string,\n\t}),\n\ttag: string,\n}\n\nexport default MainLayout;"],"sourceRoot":""}